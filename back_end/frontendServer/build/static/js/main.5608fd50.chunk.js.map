{"version":3,"sources":["serviceWorker.js","redux/reducers/userReducer.js","redux/reducers/rootReducer.js","components/ListingCard/ListingCard.js","redux/actions/userActions.js","components/Navbar/Navigationbar.js","components/Footer/Footer.js","pages/Home.js","pages/Auth/Login.js","pages/Auth/Signup.js","pages/PostListing.js","pages/Profile.js","pages/Listing.js","pages/Inquiry.js","index.js"],"names":["Boolean","window","location","hostname","match","userReducer","state","user","isLoggedIn","action","type","combineReducers","ListingCard","props","Card","style","marginLeft","marginRight","to","_id","params","Header","as","title","Body","display","justifyContent","alignItems","height","width","flexDirection","borderWidth","borderStyle","image100Url","src","alt","Spinner","animation","Title","price","Text","description","loginUser","Navigationbar","useSelector","dispatch","useDispatch","Navbar","bg","variant","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Button","onClick","Axios","post","then","res","data","success","Footer","padding","backgroundColor","color","position","bottom","textAlign","Home","useState","listings","setListings","ws","useRef","useEffect","get","reverse","catch","err","current","WebSocket","onmessage","e","message","JSON","parse","listing","concat","forEach","image500Url","close","class","marginBottom","fontSize","marginTop","map","i","key","Login","React","email","password","setUser","handleChange","target","name","value","Form","Group","controlId","Label","Control","placeholder","onChange","required","block","size","preventDefault","axios","alert","Signup","username","confirmPassword","errors","userInfo","setUserInfo","Check","label","response","error","console","log","PostListing","history","useHistory","setTitle","setDescription","setPrice","Row","column","sm","Col","lg","ev","rows","prefix","isNaN","File","files","document","getElementById","length","formData","FormData","append","headers","resp","push","Profile","Figure","Image","thumbnail","FigureCaption","Listing","useParams","setListing","inquiries","setInquiries","currentInquiryId","setCurrentInquiryId","inquiry","setInquiry","listingId","posterId","margin","img","inq","senderId","overflowY","messages","body","inquiryId","Inquiry","friends","toRespond","seen","active","author","this","rounded","Component","ChatMessage","require","store","createStore","rootReducer","applyMiddleware","thunk","App","path","exact","component","MessageCenter","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5608fd50.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = () => ({\n    user:null,\n    isLoggedIn: false,\n    });\nconst userReducer = (state = initState(), action) =>{\n    //all actions have a type\n    switch(action.type){\n        case 'LOGIN':\n            return {\n                ...state,//copy old state\n                isLoggedIn:true,\n                user: action.user,\n            };\n        case 'LOGOUT':\n            return{\n                ...state,\n                isLoggedIn:false,\n                user: null,\n            }\n        default:\n          return state;\n    }\n};\n\nexport default userReducer;","import { combineReducers } from 'redux';\n\nimport userReducer from './userReducer';\n\nexport default combineReducers({\n    userReducer,\n// add your reducers here\n});\n","import React from \"react\";\nimport { Card, Spinner } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nconst ListingCard = props => {\n  return (\n    <div>\n      <Card style={{ marginLeft: \"80px\", marginRight: \"80px\" }}>\n        <Link to={\"/Listing/\" + props._id} params={props}>\n          <Card.Header as=\"h5\">{props.title}</Card.Header>\n        </Link>\n        <Card.Body>\n          {/* if the img is not there then show loging spinner */}\n\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"flex-start\",\n              alignItems: \"center\"\n            }}\n          >\n            <div\n              style={{\n                marginRight: \"20px\",\n                height: \"100px\",\n                width: \"100px\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                borderWidth: 1,\n                borderStyle: \"solid\"\n              }}\n            >\n              {props.image100Url ? (\n                <img\n                  src={props.image100Url}\n                  alt=\"listing_img\"\n                  style={{\n                    height: \"100px\",\n                    width: \"100px\"\n                  }}\n                />\n              ) : (\n                <Spinner animation=\"border\" />\n              )}\n            </div>\n            <div>\n              <Card.Title>${props.price}</Card.Title>\n              <Card.Text>{props.description}</Card.Text>\n            </div>\n          </div>\n        </Card.Body>\n      </Card>\n      <br />\n    </div>\n  );\n};\n\nexport default ListingCard;\n","export const loginUser = user => ({\n  type: \"LOGIN\",\n  user\n});\n\nexport const logoutUser = () => ({\n  type: \"LOGOUT\"\n});\n","import React from \"react\";\nimport { Navbar, Nav, Form, FormControl, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logoutUser } from \"../../redux/actions/userActions\";\nimport { Link } from \"react-router-dom\";\nimport Axios from \"axios\";\n\nconst Navigationbar = () => {\n  const isLoggedIn = useSelector(state => state.userReducer.isLoggedIn);\n  const dispatch = useDispatch();\n  const handleLogout = () => {\n    Axios.post(\"/auth/logout\").then(res => {\n      if (res.data.success) {\n        dispatch(logoutUser());\n      }\n    });\n  };\n\n  return (\n    <div>\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n        <Navbar.Brand href=\"/\">JS is the Best</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"m-auto\">\n            {isLoggedIn ? (\n              <>\n                <Link to=\"/postlisting\" style={{ marginRight: 20 }}>\n                  Post Listing\n                </Link>\n                <Link to=\"/profile\">Profile</Link>\n              </>\n            ) : null}\n          </Nav>\n          {isLoggedIn ? (\n            <Button\n              variant=\"secondary\"\n              style={{ marginRight: 5 }}\n              onClick={handleLogout}\n            >\n              Log Out\n            </Button>\n          ) : (\n            <>\n              <Button\n                variant=\"secondary\"\n                style={{ marginRight: 5 }}\n                href=\"/login\"\n              >\n                Log In\n              </Button>\n              <Button variant=\"outline-info\" href=\"/signup\">\n                Sign Up\n              </Button>\n            </>\n          )}\n        </Navbar.Collapse>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default Navigationbar;\n","import React from \"react\";\nimport \"../../App.css\";\n\nconst Footer = () => {\n  return (\n    <div\n      style={{\n        padding: 20,\n        backgroundColor: \"#1d1d1d\",\n        color: \"#ffffff\",\n        position: \"fixed\",\n        bottom: 0,\n        width: \"100%\"\n      }}\n    >\n      <div className=\"container\" style={{ textAlign: \"center\" }}>\n        &copy; JS is the Best\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport ListingCard from \"../components/ListingCard/ListingCard.js\";\nimport Navigationbar from \"../components/Navbar/Navigationbar\";\nimport Footer from \"../components/Footer/Footer\";\nimport { useSelector } from \"react-redux\";\nimport Axios from \"axios\";\n\nconst Home = () => {\n  const [listings, setListings] = useState([]);\n  const ws = useRef(null);\n\n  useEffect(() => {\n    Axios.get(\"/listing/getListings\")\n      .then(res => {\n        if (res.data.success) {\n          setListings(res.data.listings.reverse());\n        }\n      })\n      .catch(err => {});\n  }, []);\n\n  useEffect(() => {\n    ws.current = new WebSocket(\"ws://localhost:5004\");\n\n    ws.current.onmessage = e => {\n      const message = JSON.parse(e.data);\n      switch (message.type) {\n        case \"newListing\":\n          setListings(listings => [message.listing].concat(listings));\n          break;\n        case \"ImageProcessDone\":\n          setListings(listings => {\n            listings.forEach(listing => {\n              if (message.listing._id === listing._id) {\n                listing.image100Url = message.listing.image100Url;\n                listing.image500Url = message.listing.image500Url;\n              }\n            });\n            return [...listings];\n          });\n          break;\n        default:\n          break;\n      }\n    };\n\n    return () => {\n      ws.current.close();\n    };\n  }, []);\n\n  return (\n    <div class=\"Home\" style={{ marginBottom: \"10%\" }}>\n      <Navigationbar />\n      <div\n        style={{\n          fontSize: \"35px\",\n          textAlign: \"center\",\n          marginTop: \"3%\",\n          marginBottom: \"3%\"\n        }}\n      >\n        <u>Available Listings </u>\n      </div>\n      {listings.map((listing, i) => (\n        <ListingCard key={i} {...listing} />\n      ))}\n      <Footer />\n    </div>\n  );\n};\n\nexport default Home;\n","import React, {Component} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Auth.css';\nimport Navigationbar from '../../components/Navbar/Navigationbar';\nimport Footer from '../../components/Footer/Footer';\nimport {useSelector, useDispatch} from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport { loginUser } from '../../redux/actions/userActions';\n\nconst Login = ()=> {\n    const dispatch = useDispatch();\n    //grabs info that user signed up with from redux store\n    const isLoggedIn = useSelector(state=>state.userReducer.isLoggedIn);\n    \n    const [user,setUser] = React.useState({\n        email: '',\n        password: '',\n    });\n\n    const handleChange = (e) => {\n        setUser({\n            ...user,\n            [e.target.name]: e.target.value\n        });\n    }\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        axios.post('/auth/login', user)\n        .then(res => {\n            if(res.data.success){\n                dispatch(loginUser(res.data.user));\n            }\n            else{\n                 alert(\"Incorrect email or password\");\n            }\n        }); \n    }\n\n{\n        return (\n            <div>\n                 <Navigationbar />\n                {isLoggedIn &&(\n            <Redirect to=\"/\" /> \n            )}\n            \n            <div className=\"container-auth\">\n                <h1 className=\"heading-auth\">Log In</h1>\n                <br />\n                <Form>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control type=\"email\" placeholder=\"Enter email\" name=\"email\" value={user.email} onChange={handleChange} required/>\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\" value={user.password} onChange={handleChange} required/>\n                    </Form.Group>\n                    <Button block size=\"lg\" variant=\"primary\" onClick={handleLogin}> Log In </Button>\n                    {/* <p className=\"forgot-password text-right\"> <a href=\"/\">Forgot password?</a></p> */}\n                </Form>\n            </div>\n            <Footer />\n            </div>\n        )\n    }\n}\n  \nexport default Login;\n","import React, { useState,} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Auth.css';\nimport Navigationbar from '../../components/Navbar/Navigationbar';\nimport Footer from '../../components/Footer/Footer';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {loginUser} from \"../../redux/actions/userActions\"\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\n\n// function validate(username, email, password, confirmPassword) {\n//     const errors = [];\n  \n//     if (username.length === 0) {\n//       errors.push(\"Username can't be empty\");\n//     }\n  \n//     if (email.length < 5 || email.split(\"\").filter(x => x === \"@\").length !== 1 || email.indexOf(\".\") === -1) {\n//       errors.push(\"Invalid Email\");\n//     }\n  \n//     if (password.length < 6) {\n//       errors.push(\"Password should be at least 6 characters long\");\n//     }\n\n//     if (confirmPassword != password) {\n//         errors.push(\"Passwords do not match\");\n//       }\n\n//     return errors;\n//   }\n\nconst Signup = ()=>{\n    const isLoggedIn = useSelector(state=>state.userReducer.isLoggedIn);\n    const dispatch = useDispatch()\n    const [userInfo, setUserInfo] = useState({\n        username: '',\n        email: '',\n        password: '',\n        confirmPassword: '',\n        errors: [],\n    });\n\n    const handleChange = (e) => {\n        setUserInfo({\n            ...userInfo,\n            [e.target.name]: e.target.value\n        });\n        // console.log(userInfo)\n    }\n    \n    const handleSubmit = (e) => {\n        e.preventDefault();\n        // const { username, email, password, confirmPassword } = userInfo;\n        // const errors = validate(username, email, password, confirmPassword);\n        // if (errors.length > 0) {\n        //   setUserInfo({ errors });\n        //   return;\n        // }\n      }\n\n    const handleSignUp = (e) => {\n        e.preventDefault();\n        axios.post('/auth/register', userInfo)\n        .then(response => {\n            if(response.data.success){\n                dispatch(loginUser(response.data.user))\n            }else{\n                alert(\"Incorrect credentials\")\n            }\n        })\n        .catch(error => {\n            console.log(error)\n        });\n      }\n      \n      {\n        // const { errors } = userInfo;\n        return(\n            <div style={{marginBottom: '10%'}}>\n                {isLoggedIn && <Redirect to=\"/\" />}\n                <Navigationbar />\n                <div className=\"container-auth\">\n                <h1 className=\"heading-auth\">Sign Up</h1>\n                <Form>\n                {/* {errors.map(error => (<p key={error}>Error: {error}</p>))} */}\n                    <Form.Group controlId=\"formBasicText\">\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Enter Name\" name=\"name\" value={userInfo.name} onChange={handleChange} required/>\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control type=\"email\" placeholder=\"name@example.com\" name=\"email\" value={userInfo.email} onChange={handleChange} required/>\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\" value={userInfo.password} onChange={handleChange} required/>\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Re-enter Password\" name=\"confirmPassword\" value={userInfo.confirmPassword} onChange={handleChange} required/>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Check id=\"agree\" type=\"checkbox\" style={{marginLeft:\"45px\"}} label=\"I agree to the Terms &amp; Conditions\" />\n                    </Form.Group>\n                    <Button block size=\"lg\" variant=\"primary\" onClick={handleSignUp}> Sign Up </Button>\n                    <br />\n                    <p style={{textAlign:\"center\"}}> Already have an account? <a href=\"/login\"><u> Log In here! </u></a></p>\n                </Form>\n            </div>\n            <Footer />\n            </div>\n    )\n}\n}\n\nexport default Signup;","import React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport { Row, Col } from \"react-bootstrap\";\nimport Button from \"react-bootstrap/Button\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n//import CurrencyInput from 'react-currency-input-field';\nimport Footer from \"../components/Footer/Footer\";\nimport \"../App.css\";\nimport Navigationbar from \"../components/Navbar/Navigationbar\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport Axios from \"axios\";\n\nconst PostListing = () => {\n  const history = useHistory();\n  const isLoggedIn = useSelector(state => state.userReducer.isLoggedIn);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [price, setPrice] = useState(0);\n\n  //placeholder functionality - to be updated\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const files = document.getElementById(\"postListing_imageFile\").files;\n    if (title && description && price && price > 0 && files.length > 0) {\n      let formData = new FormData();\n      formData.append(\"title\", title);\n      formData.append(\"description\", description);\n      formData.append(\"price\", price);\n      formData.append(\"imageFile\", files[0]);\n      Axios.post(\"/listing/create\", formData, {\n        headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" }\n      })\n        .then(resp => {\n          if (resp.data.success) {\n            history.push(\"/\");\n          } else {\n            alert(\"no no no\");\n          }\n        })\n        .catch(err => {});\n    } else {\n      alert(\"values missing\");\n    }\n  };\n\n  return (\n    <div>\n      {!isLoggedIn && <Redirect to=\"/Login\" />}\n      <Navigationbar />\n      <h1 className=\"heading-PostListing\">Post Listing</h1>\n      <div className=\"container-PostListing\">\n        <br />\n\n        <Form.Group as={Row} controlId=\"formHorizontalText\">\n          <Form.Label column sm={2}>\n            <b>Title</b>\n          </Form.Label>\n          <Col lg={10}>\n            <Form.Control\n              type=\"title\"\n              placeholder=\"Enter title\"\n              name=\"title\"\n              value={title}\n              onChange={ev => {\n                setTitle(ev.target.value);\n              }}\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId=\"formHorizontalText\">\n          <Form.Label column sm={2}>\n            <b>Description</b>\n          </Form.Label>\n          <Col lg={10}>\n            <Form.Control\n              type=\"description\"\n              as=\"textarea\"\n              rows={2}\n              placeholder=\"Enter description\"\n              name=\"description\"\n              value={description}\n              onChange={ev => {\n                setDescription(ev.target.value);\n              }}\n            />\n          </Col>\n        </Form.Group>\n\n        {/*Needs Work! */}\n        <Form.Group as={Row} controlId=\"formHorizontalText\">\n          <Form.Label column sm={2}>\n            <b>Price</b>\n          </Form.Label>\n          <Col lg={10}>\n            {/* <CurrencyInput type=\"price\" name=\"price\" placeholder=\"Enter Price\" prefix=\"$\" defaultValue={0} \n                            allowDecimals={true} decimalsLimit={2} onChange={(value, name) => console.log(value, name)}/> */}\n            <Form.Control\n              type=\"number\"\n              prefix=\"$\"\n              placeholder=\"Enter Price\"\n              name=\"price\"\n              value={price}\n              onChange={ev => {\n                isNaN(ev.target.value)\n                  ? setPrice(0)\n                  : setPrice(ev.target.value);\n              }}\n            />\n          </Col>\n        </Form.Group>\n\n        <Form.Group as={Row} controlId=\"formHorizontalText\">\n          <Form.Label column sm={2}>\n            <b>Upload Image</b>\n          </Form.Label>\n          <Col lg={10}>\n            <Form.File id=\"postListing_imageFile\" />\n          </Col>\n        </Form.Group>\n        <br />\n        <Button\n          className=\"post-button\"\n          size=\"lg\"\n          variant=\"dark\"\n          onClick={handleSubmit}\n        >\n          Post\n        </Button>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default PostListing;\n","import React from 'react';\nimport '../App.css';\nimport Figure from 'react-bootstrap/Figure';\nimport FigureCaption from 'react-bootstrap/FigureCaption'\nimport { Row, Col } from 'react-bootstrap';\nimport Navigationbar from '../components/Navbar/Navigationbar';\nimport Footer from '../components/Footer/Footer';\nimport { useParams, useHistory } from \"react-router-dom\";\n\nconst Profile = () =>{\n    \n    return(\n    <div>\n        <Navigationbar />\n        <div className=\"profile-margin\">\n            <div className=\"profile-info\">\n            <label>Name </label>\n            <br />\n            <label>Email</label>\n            </div>\n        </div>\n        <div className=\"profile-margin\">\n            <h3 style={{marginTop: \"25px\"}}>My Listings</h3>\n                <Row className=\"profile-margin\">\n                    <Col lg={3}>\n                    <Figure><Figure.Image width={150} height={150} src=\"./placeholder-image.jpg\" thumbnail /> \n                    <FigureCaption style={{textAlign:'center'}}>Title</FigureCaption></ Figure>\n                    </Col>\n                    <Col lg={3}>\n                    <Figure><Figure.Image width={150} height={150} src=\"./placeholder-image.jpg\" thumbnail /> \n                    <FigureCaption style={{textAlign:'center'}}>Title</FigureCaption></ Figure>\n                    </Col>\n                    <Col lg={3}>\n                    <Figure><Figure.Image width={150} height={150} src=\"./placeholder-image.jpg\" thumbnail /> \n                    <FigureCaption style={{textAlign:'center'}}>Title</FigureCaption></ Figure>\n                    </Col>\n                    <Col lg={3}>\n                    <Figure><Figure.Image width={150} height={150} src=\"./placeholder-image.jpg\" thumbnail /> \n                    <FigureCaption style={{textAlign:'center'}}>Title</FigureCaption></ Figure>\n                    </Col>\n                </Row> \n        </div>\n        <Footer />\n        </div>\n    )\n}\n\nexport default Profile;","import React, { useEffect, useState } from \"react\";\nimport { Button, Spinner } from \"react-bootstrap\";\nimport Navigationbar from \"../components/Navbar/Navigationbar\";\nimport Footer from \"../components/Footer/Footer\";\nimport { useSelector } from \"react-redux\";\nimport { useParams, useHistory, Link } from \"react-router-dom\";\nimport Axios from \"axios\";\n\nconst Listing = props => {\n  const isLoggedIn = useSelector(state => state.userReducer.isLoggedIn);\n  const user = useSelector(state => state.userReducer.user);\n  let history = useHistory();\n  const { id } = useParams();\n  const [listing, setListing] = useState(null);\n  const [inquiries, setInquiries] = useState([]);\n  const [currentInquiryId, setCurrentInquiryId] = useState(0);\n  const [inquiry, setInquiry] = useState(null);\n\n  useEffect(() => {\n    if (!id) {\n      history.push(\"/\");\n    } else {\n      Axios.post(\"/listing/getListing\", {\n        listingId: id\n      })\n        .then(res => {\n          if (res.data.success) {\n            setListing(res.data.listing);\n          } else {\n            history.push(\"/\");\n          }\n        })\n        .catch(err => {});\n    }\n  }, []);\n\n  useEffect(() => {\n    // inquiry fetcher\n    if (listing && user) {\n      if (user._id === listing.posterId) {\n        Axios.post(\"/inquiry/getAdmInquiries\", {\n          listingId: id\n        })\n          .then(res => {\n            if (res.data.success) {\n              setInquiries(res.data.inquiries);\n            }\n          })\n          .catch(err => {});\n      } else {\n        Axios.post(\"/inquiry/getUserInquiry\", {\n          listingId: id\n        })\n          .then(res => {\n            if (res.data.success) {\n              setInquiry(res.data.inquiry);\n            }\n          })\n          .catch(err => {});\n      }\n    }\n  }, [user, listing]);\n\n  return (\n    <div>\n      <Navigationbar />\n      <br />\n      <a href=\"/\" style={{ fontSize: \"18px\", marginLeft: \"30px\" }}>\n        <u> {\"<\"} Back to Listings</u>\n      </a>\n\n      <div style={{ margin: \"5%\" }}>\n        {listing && (\n          <>\n            <div style={{ display: \"flex\", marginBottom: 20 }}>\n              <div\n                style={{\n                  marginRight: \"20px\",\n                  height: \"500px\",\n                  width: \"500px\",\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  borderWidth: 1,\n                  borderStyle: \"solid\"\n                }}\n              >\n                {props.image500Url ? (\n                  <img\n                    src={props.img}\n                    alt=\"listing_img\"\n                    style={{\n                      height: \"500px\",\n                      width: \"500px\"\n                    }}\n                  />\n                ) : (\n                  <Spinner animation=\"border\" />\n                )}\n              </div>\n\n              <div>\n                <p>Title: {listing.title}</p>\n                <p>Price: {listing.price}</p>\n                <p>Description: {listing.description}</p>\n              </div>\n            </div>\n            {/* inquiry: */}\n            <div style={{ marginBottom: 200 }}>\n              {isLoggedIn ? (\n                user._id === listing.posterId ? (\n                  <div>\n                    <h2>Inquiries on your post:</h2>\n                    {inquiries &&\n                      inquiries.map(inq => (\n                        <div\n                          style={{\n                            borderWidth: 1,\n                            borderStyle: \"solid\",\n                            padding: 20,\n                            marginBottom: 10\n                          }}\n                        >\n                          <Button\n                            onClick={() => {\n                              setCurrentInquiryId(\n                                currentInquiryId === inq._id ? 0 : inq._id\n                              );\n                            }}\n                          >\n                            {inq.senderId}\n                          </Button>\n                          {currentInquiryId === inq._id && (\n                            <div\n                              style={{\n                                borderWidth: 1,\n                                marginTop: 20,\n                                borderStyle: \"solid\",\n                                textAlign: \"center\"\n                              }}\n                            >\n                              <div\n                                style={{\n                                  height: 350,\n                                  padding: 20,\n                                  overflowY: \"auto\"\n                                }}\n                              >\n                                {inq &&\n                                  inq.messages &&\n                                  inq.messages.map(message => (\n                                    <div\n                                      style={{\n                                        textAlign:\n                                          message.senderId === user._id\n                                            ? \"right\"\n                                            : \"left\",\n                                        color:\n                                          message.senderId === user._id\n                                            ? \"#1700ff\"\n                                            : \"#ff0000\"\n                                      }}\n                                    >\n                                      {message.body}\n                                    </div>\n                                  ))}\n                              </div>\n                              <div\n                                style={{\n                                  height: 50,\n                                  display: \"flex\"\n                                }}\n                              >\n                                <input\n                                  id={\"inquiryMessage\" + inq._id}\n                                  placeholder=\"message\"\n                                  style={{ width: \"80%\", margin: 10 }}\n                                />\n                                <div>\n                                  <Button\n                                    onClick={() => {\n                                      // message, listingId\n                                      const message = document.getElementById(\n                                        \"inquiryMessage\" + inq._id\n                                      ).value;\n                                      if (message && message.length > 0) {\n                                        Axios.post(\"/inquiry/admSendMessage\", {\n                                          inquiryId: inq._id,\n                                          message: message\n                                        })\n                                          .then(res => {})\n                                          .catch(err => {});\n                                      }\n                                    }}\n                                  >\n                                    send\n                                  </Button>\n                                </div>\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                      ))}\n                  </div>\n                ) : (\n                  <div\n                    style={{\n                      borderWidth: 1,\n                      borderStyle: \"solid\",\n                      textAlign: \"center\"\n                    }}\n                  >\n                    <h2>Inquiry Chat:</h2>\n                    <div\n                      style={{\n                        height: 350,\n                        padding: 20,\n                        overflowY: \"auto\"\n                      }}\n                    >\n                      {inquiry &&\n                        inquiry.messages &&\n                        inquiry.messages.map(message => (\n                          <div\n                            style={{\n                              textAlign:\n                                message.senderId === user._id\n                                  ? \"right\"\n                                  : \"left\",\n                              color:\n                                message.senderId === user._id\n                                  ? \"#1700ff\"\n                                  : \"#ff0000\"\n                            }}\n                          >\n                            {message.body}\n                          </div>\n                        ))}\n                    </div>\n                    <div\n                      style={{\n                        height: 50,\n                        display: \"flex\"\n                      }}\n                    >\n                      <input\n                        id=\"inquiryMessage0\"\n                        placeholder=\"message\"\n                        style={{ width: \"80%\", margin: 10 }}\n                      />\n                      <div>\n                        <Button\n                          onClick={() => {\n                            // message, listingId\n                            const message = document.getElementById(\n                              \"inquiryMessage0\"\n                            ).value;\n                            if (message && message.length > 0) {\n                              Axios.post(\"/inquiry/sendMessage\", {\n                                listingId: listing._id,\n                                message: message\n                              })\n                                .then(res => {})\n                                .catch(err => {});\n                            }\n                          }}\n                        >\n                          send\n                        </Button>\n                      </div>\n                    </div>\n                  </div>\n                )\n              ) : (\n                <Link to=\"/Login\">\n                  <Button\n                    variant=\"primary\"\n                    size=\"lg\"\n                    style={{ display: \"block\", margin: \"0 auto\" }}\n                  >\n                    Please log in to view inquiries\n                  </Button>\n                </Link>\n              )}\n            </div>\n          </>\n        )}\n      </div>\n      {/* <Footer /> */}\n    </div>\n  );\n};\n\nexport default Listing;\n","import React, { Component } from \"react\";\nimport { MDBCard, MDBCardBody, MDBRow, MDBListGroup, MDBListGroupItem, MDBBadge, MDBIcon} from \"mdbreact\";\nimport Button from 'react-bootstrap/Button';\nimport Navigationbar from '../components/Navbar/Navigationbar';\nimport Footer from '../components/Footer/Footer';\nimport \"../App.css\";\n\nclass Inquiry extends Component {\n  constructor() {\n    super();\n    this.state = {\n      friends: [\n      {\n      name: \"John Doe\",\n      message: \"Hello, Are you there?\",\n      toRespond: 1,\n      seen: false,\n      active: true\n      },\n      {\n      name: \"Danny Smith\",\n      message: \"Lorem ipsum dolor sit\",\n      toRespond: 0,\n      seen: false,\n      active: false\n      },\n      {\n      name: \"Alex Steward\",\n      message: \"Lorem ipsum dolor sit\",\n      toRespond: 0,\n      seen: false,\n      active: false\n      },\n      {\n      name: \"Ashley Olsen\",\n      message: \"Lorem ipsum dolor sit\",\n      toRespond: 0,\n      seen: false,\n      active: false\n      },\n      {\n      name: \"Kate Moss\",\n      message: \"Lorem ipsum dolor sit\",\n      toRespond: 0,\n      seen: false,\n      active: false\n      },\n      {\n      name: \"Lara Croft\",\n      message: \"Lorem ipsum dolor sit\",\n      toRespond: 0,\n      seen: false,\n      active: false\n      },\n      {\n      name: \"Brad Pitt\",\n      message: \"Lorem ipsum dolor sit\",\n      toRespond: 0,\n      seen: true,\n      active: false\n      }\n      ],\n      messages: [\n      {\n      author: \"Brad Pitt\",\n      message:\n      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et doloremagna aliqua.\"\n      },\n      {\n      author: \"Lara Croft\",\n      message:\n      \" Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium.\"\n      },\n      {\n      author: \"Brad Pitt\",\n      message:\n      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et doloremagna aliqua.\"\n      }\n      ]\n    };\n}\n\n  render() {\n    return (\n      <div>\n        <Navigationbar />\n        <br />\n        <a href='/Listing' style={{fontSize: '18px', marginLeft:'30px'}}><u>{\"<\"}  Back to Listing</u></a>\n        <MDBCard className=\"grey lighten-3 chat-room\">\n          <MDBCardBody style={{marginLeft: 100, marginRight: 100}}>\n            <MDBListGroup className=\"list-unstyled pl-3\">\n              {this.state.messages.map(message => (\n                <ChatMessage key={message.author} message={message} />\n                ))}\n              <li>\n                <div className=\"form-group basic-textarea\">\n                  <textarea className=\"form-control pl-2 my-0\" id=\"exampleFormControlTextarea2\" rows=\"3\" placeholder=\"Type your inquiry here...\" />\n                  <Button color=\"info\" size=\"lg\" rounded className=\"float-right mt-4\"> Send </Button>\n                </div>\n              </li>\n            </MDBListGroup>\n          </MDBCardBody>\n        </MDBCard>\n        <br /><br /><br /><br />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nconst Friend = ({\n  friend: { name, message, toRespond, seen, active }\n}) => (\n  <MDBListGroupItem\n    href=\"#!\"\n    className=\"d-flex justify-content-between p-2 border-light\"\n    style={{ backgroundColor: active ? \"#eeeeee\" : \"\" }}\n  >\n\n    <div style={{ fontSize: \"0.95rem\" }}>\n      <strong>{name}</strong>\n      <p className=\"text-muted\">{message}</p>\n    </div>\n    <div>\n      {seen ? (\n        <span className=\"text-muted float-right\">\n          <MDBIcon className=\"fa-check\" aria-hidden=\"true\" />\n        </span>\n      ) : toRespond ? (\n        <MDBBadge color=\"danger\" className=\"float-right\">\n          {toRespond}\n        </MDBBadge>\n      ) : (\n        <span className=\"text-muted float-right\">\n          <MDBIcon icon=\"reply\" aria-hidden=\"true\" />\n        </span>\n      )}\n    </div>\n  </MDBListGroupItem>\n);\n\nconst ChatMessage = ({ message: { author, message } }) => (\n  <li className=\"chat-message d-flex justify-content-between mb-4\">\n    <MDBCard>\n      <MDBCardBody>\n        <div>\n          <strong className=\"primary-font\">{author}</strong>\n          <small className=\"pull-right text-muted\">\n          </small>\n        </div>\n        <hr />\n        <p className=\"mb-0\">{message}</p>\n      </MDBCardBody>\n    </MDBCard>\n  </li>\n);\n\nexport default Inquiry;","import React, { useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport rootReducer from \"./redux/reducers/rootReducer\";\nimport thunk from \"redux-thunk\";\nimport \"./App.css\";\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Auth/Login\";\nimport Signup from \"./pages/Auth/Signup\";\nimport PostListing from \"./pages/PostListing\";\nimport Profile from \"./pages/Profile\";\nimport Listing from \"./pages/Listing\";\nimport { Provider } from \"react-redux\";\nimport MessageCenter from \"./pages/Inquiry\";\nimport Inquiry from \"./pages/Inquiry\";\n\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport { useDispatch } from \"react-redux\";\nimport { loginUser } from \"./redux/actions/userActions\";\nconst axios = require(\"axios\");\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nconst App = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    axios.post(\"http://localhost:5000/auth/user\").then(res => {\n      if (res.data.success) {\n        dispatch(loginUser(res.data.user));\n      }\n    });\n  }, []);\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/Login\" component={Login} />\n        <Route path=\"/Signup\" component={Signup} />\n        <Route path=\"/Profile\" component={Profile} />\n        <Route path=\"/PostListing\" component={PostListing} />\n        <Route path=\"/Messages\" component={MessageCenter} />\n        <Route path=\"/Listing/:id\" component={Listing} />\n        <Route path=\"/Listing\" component={Listing} />\n        <Route path=\"/Inquiry\" component={Inquiry} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}