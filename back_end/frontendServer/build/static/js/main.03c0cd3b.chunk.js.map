{"version":3,"sources":["serviceWorker.js","redux/reducers/userReducer.js","redux/reducers/rootReducer.js","components/ListingCard/ListingCard.js","redux/actions/userActions.js","components/Navbar/Navigationbar.js","components/Footer/Footer.js","pages/Home.js","pages/Auth/Login.js","pages/Auth/Signup.js","pages/PostListing.js","pages/Profile.js","pages/Listing.js","index.js"],"names":["Boolean","window","location","hostname","match","userReducer","state","user","isLoggedIn","action","type","combineReducers","ListingCard","props","Card","style","marginLeft","marginRight","to","_id","params","Header","as","title","Body","display","justifyContent","flexWrap","alignItems","height","width","flexDirection","borderWidth","borderStyle","image100Url","src","alt","Spinner","animation","Title","price","Text","description","loginUser","Navigationbar","useSelector","dispatch","useDispatch","Navbar","bg","variant","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Button","onClick","Axios","post","then","res","data","success","Footer","padding","backgroundColor","color","position","bottom","textAlign","Home","useState","listings","setListings","ws","useRef","useEffect","get","reverse","catch","err","current","WebSocket","onmessage","e","message","JSON","parse","listing","concat","forEach","image500Url","close","marginBottom","fontSize","marginTop","map","i","key","Login","React","email","password","setUser","handleChange","target","name","value","Form","Group","controlId","Label","Control","placeholder","onChange","required","block","size","preventDefault","axios","alert","Signup","username","confirmPassword","errors","userInfo","setUserInfo","Check","label","response","error","console","log","PostListing","history","useHistory","setTitle","setDescription","setPrice","from","Row","column","sm","Col","lg","ev","rows","prefix","isNaN","File","files","document","getElementById","length","formData","FormData","append","headers","resp","push","Profile","Listing","useParams","setListing","inquiries","setInquiries","currentInquiryId","setCurrentInquiryId","inquiry","setInquiry","listingId","posterId","inq","messages","objDiv","scrollTop","scrollHeight","objDivs","getElementsByClassName","margin","alignContent","senderId","overflowY","stle","border","borderRadius","body","inquiryId","require","store","createStore","rootReducer","applyMiddleware","thunk","App","path","exact","component","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.03c0cd3b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = () => ({\n    user:null,\n    isLoggedIn: false,\n    });\nconst userReducer = (state = initState(), action) =>{\n    //all actions have a type\n    switch(action.type){\n        case 'LOGIN':\n            return {\n                ...state,//copy old state\n                isLoggedIn:true,\n                user: action.user,\n            };\n        case 'LOGOUT':\n            return{\n                ...state,\n                isLoggedIn:false,\n                user: null,\n            }\n        default:\n          return state;\n    }\n};\n\nexport default userReducer;","import { combineReducers } from 'redux';\n\nimport userReducer from './userReducer';\n\nexport default combineReducers({\n    userReducer,\n// add your reducers here\n});\n","import React from \"react\";\nimport { Card, Spinner } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nconst ListingCard = props => {\n  return (\n    <div>\n      <Card style={{ marginLeft: \"80px\", marginRight: \"80px\" }}>\n        <Link to={\"/Listing/\" + props._id} params={props}>\n          <Card.Header as=\"h5\">{props.title}</Card.Header>\n        </Link>\n        <Card.Body>\n          {/* if the img is not there then show loging spinner */}\n\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"flex-start\",\n              flexWrap: 'wrap',\n              alignItems: \"center\"\n            }}\n          >\n            <div\n              style={{\n                marginRight: \"20px\",\n                height: \"100px\",\n                width: \"100px\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                borderWidth: 1,\n                borderStyle: \"solid\"\n              }}\n            >\n              {props.image100Url ? (\n                <img\n                  src={props.image100Url}\n                  alt=\"listing_img\"\n                  style={{\n                    height: \"100px\",\n                    width: \"100px\"\n                  }}\n                />\n              ) : (\n                <Spinner animation=\"border\" />\n              )}\n            </div>\n            <div>\n              <Card.Title>${props.price}</Card.Title>\n              <Card.Text>{props.description}</Card.Text>\n            </div>\n          </div>\n        </Card.Body>\n      </Card>\n      <br />\n    </div>\n  );\n};\n\nexport default ListingCard;\n","export const loginUser = user => ({\n  type: \"LOGIN\",\n  user\n});\n\nexport const logoutUser = () => ({\n  type: \"LOGOUT\"\n});\n","import React from \"react\";\nimport { Navbar, Nav, Form, FormControl, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logoutUser } from \"../../redux/actions/userActions\";\nimport { Link } from \"react-router-dom\";\nimport Axios from \"axios\";\n\nconst Navigationbar = () => {\n  const isLoggedIn = useSelector(state => state.userReducer.isLoggedIn);\n  const dispatch = useDispatch();\n  const handleLogout = () => {\n    Axios.post(\"/auth/logout\").then(res => {\n      if (res.data.success) {\n        dispatch(logoutUser());\n      }\n    });\n  };\n\n  return (\n    <div>\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n        <Navbar.Brand href=\"/\">JS is the Best</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"m-auto\">\n            {isLoggedIn ? (\n              <>\n                <Link to=\"/postlisting\" style={{ marginRight: 20 }}>\n                  Post Listing\n                </Link>\n                <Link to=\"/profile\">Profile</Link>\n              </>\n            ) : null}\n          </Nav>\n          {isLoggedIn ? (\n            <Button\n              variant=\"secondary\"\n              style={{ marginRight: 5 }}\n              onClick={handleLogout}\n            >\n              Log Out\n            </Button>\n          ) : (\n            <>\n              <Button\n                variant=\"secondary\"\n                style={{ marginRight: 5 }}\n                href=\"/login\"\n              >\n                Log In\n              </Button>\n              <Button variant=\"outline-info\" href=\"/signup\">\n                Sign Up\n              </Button>\n            </>\n          )}\n        </Navbar.Collapse>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default Navigationbar;\n","import React from \"react\";\nimport \"../../App.css\";\n\nconst Footer = () => {\n  return (\n    <div\n      style={{\n        padding: 20,\n        backgroundColor: \"#1d1d1d\",\n        color: \"#ffffff\",\n        position: \"fixed\",\n        bottom: 0,\n        width: \"100%\"\n      }}\n    >\n      <div className=\"container\" style={{ textAlign: \"center\" }}>\n        &copy; JS is the Best\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport ListingCard from \"../components/ListingCard/ListingCard.js\";\nimport Navigationbar from \"../components/Navbar/Navigationbar\";\nimport Footer from \"../components/Footer/Footer\";\nimport { useSelector } from \"react-redux\";\nimport Axios from \"axios\";\n\nconst Home = () => {\n  const [listings, setListings] = useState([]);\n  const ws = useRef(null);\n\n  useEffect(() => {\n    Axios.get(\"/listing/getListings\")\n      .then(res => {\n        if (res.data.success) {\n          setListings(res.data.listings.reverse());\n        }\n      })\n      .catch(err => {});\n  }, []);\n\n  useEffect(() => {\n    ws.current = new WebSocket(\"ws://localhost:5004\");\n\n    ws.current.onmessage = e => {\n      const message = JSON.parse(e.data);\n      switch (message.type) {\n        case \"newListing\":\n          setListings(listings => [message.listing].concat(listings));\n          break;\n        case \"ImageProcessDone\":\n          setListings(listings => {\n            listings.forEach(listing => {\n              if (message.listing._id === listing._id) {\n                listing.image100Url = message.listing.image100Url;\n                listing.image500Url = message.listing.image500Url;\n              }\n            });\n            return [...listings];\n          });\n          break;\n        default:\n          break;\n      }\n    };\n\n    return () => {\n      ws.current.close();\n    };\n  }, []);\n\n  return (\n    <div className=\"Home\" style={{ marginBottom: \"15%\" }}>\n      <Navigationbar />\n      <div\n        style={{\n          fontSize: \"35px\",\n          textAlign: \"center\",\n          marginTop: \"3%\",\n          marginBottom: \"3%\"\n        }}\n      >\n        <u>Available Listings </u>\n      </div>\n      {listings.map((listing, i) => (\n        <ListingCard key={i} {...listing} />\n      ))}\n      <Footer />\n    </div>\n  );\n};\n\nexport default Home;\n","import React, {Component} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Auth.css';\nimport Navigationbar from '../../components/Navbar/Navigationbar';\nimport Footer from '../../components/Footer/Footer';\nimport {useSelector, useDispatch} from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport { loginUser } from '../../redux/actions/userActions';\n\nconst Login = ()=> {\n    const dispatch = useDispatch();\n    //grabs info that user signed up with from redux store\n    const isLoggedIn = useSelector(state=>state.userReducer.isLoggedIn);\n    \n    const [user,setUser] = React.useState({\n        email: '',\n        password: '',\n    });\n\n    const handleChange = (e) => {\n        setUser({\n            ...user,\n            [e.target.name]: e.target.value\n        });\n    }\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        axios.post('/auth/login', user)\n        .then(res => {\n            if(res.data.success){\n                dispatch(loginUser(res.data.user));\n            }\n            else{\n                 alert(\"Incorrect email or password\");\n            }\n        }); \n    }\n\n{\n        return (\n            <div>\n                 <Navigationbar />\n                {isLoggedIn &&(\n            <Redirect to=\"/\" /> \n            )}\n            \n            <div className=\"container-auth\">\n                <h1 className=\"heading-auth\">Log In</h1>\n                <br />\n                <Form>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control type=\"email\" placeholder=\"Enter email\" name=\"email\" value={user.email} onChange={handleChange} required/>\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\" value={user.password} onChange={handleChange} required/>\n                    </Form.Group>\n                    <Button block size=\"lg\" variant=\"primary\" onClick={handleLogin}> Log In </Button>\n                    {/* <p className=\"forgot-password text-right\"> <a href=\"/\">Forgot password?</a></p> */}\n                </Form>\n            </div>\n            <Footer />\n            </div>\n        )\n    }\n}\n  \nexport default Login;\n","import React, { useState,} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Auth.css';\nimport Navigationbar from '../../components/Navbar/Navigationbar';\nimport Footer from '../../components/Footer/Footer';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {loginUser} from \"../../redux/actions/userActions\"\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\n\n// function validate(username, email, password, confirmPassword) {\n//     const errors = [];\n  \n//     if (username.length === 0) {\n//       errors.push(\"Username can't be empty\");\n//     }\n  \n//     if (email.length < 5 || email.split(\"\").filter(x => x === \"@\").length !== 1 || email.indexOf(\".\") === -1) {\n//       errors.push(\"Invalid Email\");\n//     }\n  \n//     if (password.length < 6) {\n//       errors.push(\"Password should be at least 6 characters long\");\n//     }\n\n//     if (confirmPassword != password) {\n//         errors.push(\"Passwords do not match\");\n//       }\n\n//     return errors;\n//   }\n\nconst Signup = ()=>{\n    const isLoggedIn = useSelector(state=>state.userReducer.isLoggedIn);\n    const dispatch = useDispatch()\n    const [userInfo, setUserInfo] = useState({\n        username: '',\n        email: '',\n        password: '',\n        confirmPassword: '',\n        errors: [],\n    });\n\n    const handleChange = (e) => {\n        setUserInfo({\n            ...userInfo,\n            [e.target.name]: e.target.value\n        });\n        // console.log(userInfo)\n    }\n    \n    const handleSubmit = (e) => {\n        e.preventDefault();\n        // const { username, email, password, confirmPassword } = userInfo;\n        // const errors = validate(username, email, password, confirmPassword);\n        // if (errors.length > 0) {\n        //   setUserInfo({ errors });\n        //   return;\n        // }\n      }\n\n    const handleSignUp = (e) => {\n        e.preventDefault();\n        axios.post('/auth/register', userInfo)\n        .then(response => {\n            if(response.data.success){\n                dispatch(loginUser(response.data.user))\n            }else{\n                alert(\"Incorrect credentials\")\n            }\n        })\n        .catch(error => {\n            console.log(error)\n        });\n      }\n      \n      {\n        // const { errors } = userInfo;\n        return(\n            <div style={{marginBottom: '10%'}}>\n                {isLoggedIn && <Redirect to=\"/\" />}\n                <Navigationbar />\n                <div className=\"container-auth\">\n                <h1 className=\"heading-auth\">Sign Up</h1>\n                <Form>\n                {/* {errors.map(error => (<p key={error}>Error: {error}</p>))} */}\n                    <Form.Group controlId=\"formBasicText\">\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Enter Name\" name=\"name\" value={userInfo.name} onChange={handleChange} required/>\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control type=\"email\" placeholder=\"name@example.com\" name=\"email\" value={userInfo.email} onChange={handleChange} required/>\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\" value={userInfo.password} onChange={handleChange} required/>\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Re-enter Password\" name=\"confirmPassword\" value={userInfo.confirmPassword} onChange={handleChange} required/>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Check id=\"agree\" type=\"checkbox\" style={{marginLeft:\"45px\"}} label=\"I agree to the Terms &amp; Conditions\" />\n                    </Form.Group>\n                    <Button block size=\"lg\" variant=\"primary\" onClick={handleSignUp}> Sign Up </Button>\n                    <br />\n                    <p style={{textAlign:\"center\"}}> Already have an account? <a href=\"/login\"><u> Log In here! </u></a></p>\n                </Form>\n            </div>\n            <Footer />\n            </div>\n    )\n}\n}\n\nexport default Signup;","import React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport { Row, Col } from \"react-bootstrap\";\nimport Button from \"react-bootstrap/Button\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n//import CurrencyInput from 'react-currency-input-field';\nimport Footer from \"../components/Footer/Footer\";\nimport \"../App.css\";\nimport Navigationbar from \"../components/Navbar/Navigationbar\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport Axios from \"axios\";\n\nconst PostListing = () => {\n  const history = useHistory();\n  const isLoggedIn = useSelector(state => state.userReducer.isLoggedIn);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [price, setPrice] = useState(0);\n\n  //placeholder functionality - to be updated\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const files = document.getElementById(\"postListing_imageFile\").files;\n    if (title && description && price && price > 0 && files.length > 0) {\n      let formData = new FormData();\n      formData.append(\"title\", title);\n      formData.append(\"description\", description);\n      formData.append(\"price\", price);\n      formData.append(\"imageFile\", files[0]);\n      Axios.post(\"/listing/create\", formData, {\n        headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" }\n      })\n        .then(resp => {\n          if (resp.data.success) {\n            history.push(\"/\");\n          } else {\n            alert(\"no no no\");\n          }\n        })\n        .catch(err => {});\n    } else {\n      alert(\"values missing\");\n    }\n  };\n\n  return (\n    <div style={{marginBottom:'15%'}}>\n      {!isLoggedIn && <Redirect to=\"/Login\" />}\n      <Redirect from=\"/\" to=\"/PostListing\" /> \n      <Navigationbar />\n      <h1 className=\"heading-PostListing\">Post Listing</h1>\n      <div className=\"container-PostListing\">\n        <br />\n\n        <Form.Group as={Row} controlId=\"formHorizontalText\">\n          <Form.Label column sm={2}>\n            <b>Title</b>\n          </Form.Label>\n          <Col lg={10}>\n            <Form.Control\n              type=\"title\"\n              placeholder=\"Enter title\"\n              name=\"title\"\n              value={title}\n              onChange={ev => {\n                setTitle(ev.target.value);\n              }}\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId=\"formHorizontalText\">\n          <Form.Label column sm={2}>\n            <b>Description</b>\n          </Form.Label>\n          <Col lg={10}>\n            <Form.Control\n              type=\"description\"\n              as=\"textarea\"\n              rows={2}\n              placeholder=\"Enter description\"\n              name=\"description\"\n              value={description}\n              onChange={ev => {\n                setDescription(ev.target.value);\n              }}\n            />\n          </Col>\n        </Form.Group>\n\n        {/*Needs Work! */}\n        <Form.Group as={Row} controlId=\"formHorizontalText\">\n          <Form.Label column sm={2}>\n            <b>Price</b>\n          </Form.Label>\n          <Col lg={10}>\n            {/* <CurrencyInput type=\"price\" name=\"price\" placeholder=\"Enter Price\" prefix=\"$\" defaultValue={0} \n                            allowDecimals={true} decimalsLimit={2} onChange={(value, name) => console.log(value, name)}/> */}\n            <Form.Control\n              type=\"number\"\n              prefix=\"$\"\n              placeholder=\"Enter Price\"\n              name=\"price\"\n              value={price}\n              onChange={ev => {\n                isNaN(ev.target.value)\n                  ? setPrice(0)\n                  : setPrice(ev.target.value);\n              }}\n            />\n          </Col>\n        </Form.Group>\n\n        <Form.Group as={Row} controlId=\"formHorizontalText\">\n          <Form.Label column sm={2}>\n            <b>Upload Image</b>\n          </Form.Label>\n          <Col lg={10}>\n            <Form.File id=\"postListing_imageFile\" />\n          </Col>\n        </Form.Group>\n        <br />\n        <Button\n          className=\"post-button\"\n          size=\"lg\"\n          variant=\"dark\"\n          onClick={handleSubmit}\n        >\n          Post\n        </Button>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default PostListing;\n","import React from 'react';\nimport '../App.css';\nimport { useState, useEffect, useRef } from \"react\";\nimport Navigationbar from '../components/Navbar/Navigationbar';\nimport Footer from '../components/Footer/Footer';\nimport {useSelector } from \"react-redux\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport ListingCard from \"../components/ListingCard/ListingCard.js\";\nimport Axios from \"axios\";\n\nconst Profile = () =>{\n\n    const isLoggedIn = useSelector(state => state.userReducer.isLoggedIn);\n    const [listings, setListings] = useState([]);\n    \n    const ws = useRef(null);\n    const user = useSelector(state => state.userReducer.user);\n\n    useEffect(() => {\n        Axios.post(\"/listing/getUserListings\")\n        .then(res => {\n            if (res.data.success) {\n               setListings(res.data.listings.reverse());\n          }\n        })\n        .catch(err => {});\n    }, []);\n\n  useEffect(() => {\n    ws.current = new WebSocket(\"ws://localhost:5004\");\n\n    ws.current.onmessage = e => {\n      const message = JSON.parse(e.data);\n      switch (message.type) {\n        case \"newListing\":\n          setListings(listings => [message.listing].concat(listings));\n          break;\n        case \"ImageProcessDone\":\n          setListings(listings => {\n            listings.forEach(listing => {\n              if (message.listing._id === listing._id) {\n                listing.image100Url = message.listing.image100Url;\n                listing.image500Url = message.listing.image500Url;\n              }\n            });\n            return [...listings];\n          });\n          break;\n        default:\n          break;\n      }\n    };\n\n    return () => {\n        ws.current.close();\n      };\n    }, []);\n\n    return(\n    <div style={{marginBottom:'15%'}}>\n        {!isLoggedIn && <Redirect to=\"/Login\" />}\n        {isLoggedIn && \n        <div> \n          <Navigationbar />\n        <div className=\"profile-margin\">\n            <div className=\"profile-info\">\n            <label>Name: {user.name}</label>\n            <br />\n            <label>Email: {user.email}</label>\n            </div>\n        </div>\n        <div>\n            <div\n            style={{\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            marginTop: \"3%\",\n            marginBottom: \"3%\",\n            width: '60%'\n            }}\n            >\n                <h3 style={{marginTop: \"25px\", textAlign:'center'}}>My Listings</h3>\n                  {listings.map((listing, i) => (\n                    <ListingCard key={i} {...listing} />\n                  ))} \n            </div>\n        </div>\n        <Footer /></div>}\n        </div>\n    )\n}\n\nexport default Profile;","import React, { useEffect, useState, useRef } from \"react\";\nimport { Button, Spinner } from \"react-bootstrap\";\nimport Navigationbar from \"../components/Navbar/Navigationbar\";\nimport Footer from \"../components/Footer/Footer\";\nimport { useSelector } from \"react-redux\";\nimport { useParams, useHistory, Link } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport '../App.css'\n\nconst Listing = props => {\n  const isLoggedIn = useSelector(state => state.userReducer.isLoggedIn);\n  const user = useSelector(state => state.userReducer.user);\n  let history = useHistory();\n  const { id } = useParams();\n  const [listing, setListing] = useState(null);\n  const [inquiries, setInquiries] = useState([]);\n  const [currentInquiryId, setCurrentInquiryId] = useState(0);\n  const [inquiry, setInquiry] = useState(null);\n\n  useEffect(() => {\n    if (!id) {\n      history.push(\"/\");\n    } else {\n      Axios.post(\"/listing/getListing\", {\n        listingId: id\n      })\n        .then(res => {\n          if (res.data.success) {\n            setListing(res.data.listing);\n          } else {\n            history.push(\"/\");\n          }\n        })\n        .catch(err => {});\n    }\n  }, []);\n\n  useEffect(() => {\n    // inquiry fetcher\n    if (listing && user) {\n      if (user._id === listing.posterId) {\n        Axios.post(\"/inquiry/getAdmInquiries\", {\n          listingId: id\n        })\n          .then(res => {\n            if (res.data.success) {\n              setInquiries(res.data.inquiries);\n            }\n          })\n          .catch(err => {});\n      } else {\n        Axios.post(\"/inquiry/getUserInquiry\", {\n          listingId: id\n        })\n          .then(res => {\n            if (res.data.success) {\n              setInquiry(res.data.inquiry);\n            }\n          })\n          .catch(err => {});\n      }\n    }\n  }, [user, listing]);\n\n  const ws = useRef(null);\n  useEffect(() => {\n    ws.current = new WebSocket(\"ws://localhost:5004\");\n\n    return () => {\n      ws.current.close();\n    };\n  }, []);\n\n  useEffect(() => {\n    ws.current.onmessage = e => {\n      const message = JSON.parse(e.data);\n      switch (message.type) {\n        case \"newInquiryMessage\":\n          if (listing && user && message.inquiry) {\n            if (user._id === listing.posterId) {\n              setInquiries(inquiries => {\n                inquiries.forEach(inq => {\n                  if (inq._id === message.inquiry._id) {\n                    inq.messages = message.inquiry.messages;\n                  }\n                });\n                return [...inquiries];\n              });\n            } else {\n              if (inquiry && inquiry._id === message.inquiry._id) {\n                setInquiry(message.inquiry);\n              }\n            }\n          } else {\n          }\n\n          break;\n        case \"ImageProcessDone\":\n          if (listing && listing._id === message.listing._id) {\n            setListing({\n              ...listing,\n              image100Url: message.listing.image100Url,\n              image500Url: message.listing.image500Url\n            });\n          }\n          break;\n        default:\n          break;\n      }\n    };\n  }, [user, listing, inquiry, inquiries]);\n\n  useEffect(() => {\n    let objDiv = document.getElementById(\"scrollerDiv2\");\n    if (objDiv) {\n      objDiv.scrollTop = objDiv.scrollHeight;\n    }\n  }, [inquiry]);\n  useEffect(() => {\n    let objDivs = document.getElementsByClassName(\"scrollerDiv1\");\n    if (objDivs && objDivs.length > 0) console.log(objDivs);\n    for (let objDiv of objDivs) {\n      objDiv.scrollTop = objDiv.scrollHeight;\n    }\n  }, [inquiries]);\n\n  return (\n    <div style={{marginBottom:'5%'}}>\n      <Navigationbar />\n      <br />\n      <a href=\"/\" style={{ fontSize: \"18px\", marginLeft: \"30px\" }}>\n        <u> {\"<\"} Back to Listings</u>\n      </a>\n\n      <div style={{ margin: \"5%\" }}>\n        {listing && (\n          <>\n            <div style={{ display: \"flex\", marginBottom: 20 }}>\n              <div\n                style={{\n                  marginRight: \"20px\",\n                  height: \"500px\",\n                  width: \"500px\",\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  borderWidth: 1,\n                  borderStyle: \"solid\"\n                }}\n              >\n                {listing.image500Url ? (\n                  <img\n                    src={listing.image500Url}\n                    alt=\"listing_img\"\n                    style={{\n                      height: \"500px\",\n                      width: \"500px\"\n                    }}\n                  />\n                ) : (\n                  <Spinner animation=\"border\" />\n                )}\n              </div>\n\n              <div>\n                <p><b>Title:</b> {listing.title}</p>\n                <p><b>Price:</b> ${listing.price}</p>\n                <p><b>Description:</b> {listing.description}</p>\n              </div>\n            </div>\n            {/* inquiry: */}\n            <div style={{ marginBottom: 200 }}>\n              {isLoggedIn ? (\n                user._id === listing.posterId ? (\n                  <div>\n                    <h2 style={{textAlign:'center'}}>Inquiries on your post:</h2>\n                    {inquiries &&\n                      inquiries.map(inq => (\n                        <div\n                          style={{\n                            padding: 20,\n                            alignContent:'center',\n                            marginLeft: '20%',\n                            marginRight: '20%',\n                          }}\n                        >\n                          <div style={{\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                            alignItems: \"center\"\n                          }}>\n                            <Button\n                              onClick={() => {\n                                setCurrentInquiryId(\n                                  currentInquiryId === inq._id ? 0 : inq._id\n                                );\n                              }}\n                            >\n                              {/* grab the users name here*/}\n                              {inq.senderId}\n                            </Button>\n                          </div>\n                          {currentInquiryId === inq._id && (\n                            <div\n                              style={{\n                                borderWidth: 1,\n                                marginTop: 20,\n                                borderStyle: \"solid\",\n                                textAlign: \"center\"\n                              }}\n                            >\n                              <div\n                                className=\"scrollerDiv1\"\n                                style={{\n                                  height: 350,\n                                  padding: 20,\n                                  overflowY: \"auto\"\n                                }}\n                              >\n                                {inq &&\n                                  inq.messages &&\n                                  inq.messages.map(message => (\n                                    <div \n                                        style={{\n                                          textAlign:\n                                            message.senderId === user._id\n                                              ? \"right\"\n                                              : \"left\",\n                                          color:\n                                            message.senderId === user._id\n                                              ? \"#1700ff\"\n                                              : \"#ff0000\",\n                                        }}\n                                    >\n                                        <div stle={{width: \"100%\",\n                                              display: \"flex\" }}>\n                                          <div style={{border: \"0.5px solid black\",\n                                            borderRadius: \"10px\",\n                                            margin: \"5px\",\n                                            padding: \"10px\",\n                                            display: \"inline-block\"\n                                          }}>\n                                           {message.body}\n                                        </div>\n                                      </div>\n                                    </div>\n                                  ))}\n                              </div>\n                              <div\n                                style={{\n                                  height: 50,\n                                  display: \"flex\"\n                                }}\n                              >\n                                <input\n                                  id={\"inquiryMessage\" + inq._id}\n                                  placeholder=\"message\"\n                                  style={{ width: \"80%\", \n                                  marginBottom: 10, \n                                  marginLeft: 'auto',\n                                  marginRight: 'auto'}}\n                                />\n                                <div>\n                                  <Button \n                                  style={{\n                                  marginRight: 10\n                                  }}\n                                    onClick={() => {\n                                      // message, listingId\n                                      const message = document.getElementById(\n                                        \"inquiryMessage\" + inq._id\n                                      );\n                                      if (\n                                        message.value &&\n                                        message.value.length > 0\n                                      ) {\n                                        Axios.post(\"/inquiry/admSendMessage\", {\n                                          inquiryId: inq._id,\n                                          message: message.value\n                                        })\n                                          .then(res => {\n                                            if (res.data.success) {\n                                              message.value = \"\";\n                                            }\n                                          })\n                                          .catch(err => {});\n                                      }\n                                    }}\n                                  >\n                                    Send\n                                  </Button>\n                                </div>\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                      ))}\n                  </div>\n                ) : (\n                  <div\n                    style={{\n                      borderWidth: 1,\n                      borderStyle: \"solid\",\n                      textAlign: \"center\",\n                      marginLeft: '20%',\n                      marginRight: '20%',\n                      marginTop: '5%'\n                    }}\n                  >\n                    <h2>Inquiry:</h2>\n                    <div\n                      id=\"scrollerDiv2\"\n                      style={{\n                        height: 350,\n                        padding: 20,\n                        overflowY: \"auto\"\n                      }}\n                    >\n                      {inquiry &&\n                        inquiry.messages &&\n                        inquiry.messages.map(message => (\n                          <div\n                            style={{\n                              textAlign:\n                                message.senderId === user._id\n                                  ? \"right\"\n                                  : \"left\",\n                              color:\n                                message.senderId === user._id\n                                  ? \"#1700ff\"\n                                  : \"#ff0000\"\n                            }}\n                          >\n                            <div stle={{width: \"100%\",\n                            display: \"flex\" }}>\n                              <div style={{border: \"0.5px solid black\",\n                              borderRadius: \"10px\",\n                              margin: \"5px\",\n                              padding: \"10px\",\n                              display: \"inline-block\"\n                            }}>\n                              {message.body}\n                              </div>\n                          </div>\n                        </div>\n                        ))}\n                    </div>\n                    <div\n                      style={{\n                        height: 50,\n                        display: \"flex\"\n                      }}\n                    >\n                      <input\n                        id=\"inquiryMessage0\"\n                        placeholder=\"message\"\n                        style={{ width: \"80%\", \n                        marginBottom: 10, \n                        marginLeft: 'auto',\n                        marginRight: 'auto' }}\n                      />\n                      <div>\n                        <Button\n                        style={{\n                          marginRight: 15\n                          }}\n                          onClick={() => {\n                            // message, listingId\n                            const message = document.getElementById(\n                              \"inquiryMessage0\"\n                            );\n                            if (message.value && message.value.length > 0) {\n                              Axios.post(\"/inquiry/sendMessage\", {\n                                listingId: listing._id,\n                                message: message.value\n                              })\n                                .then(res => {\n                                  if (res.data.success) {\n                                    message.value = \"\";\n                                  }\n                                })\n                                .catch(err => {});\n                            }\n                          }}\n                        >\n                          Send\n                        </Button>\n                      </div>\n                    </div>\n                  </div>\n                )\n              ) : (\n                <Link to=\"/Login\">\n                  <Button\n                    variant=\"primary\"\n                    size=\"lg\"\n                    style={{ display: \"block\", margin: \"0 auto\" }}\n                  >\n                    Please log in to view inquiries\n                  </Button>\n                </Link>\n              )}\n            </div>\n          </>\n        )}\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Listing;\n","import React, { useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport rootReducer from \"./redux/reducers/rootReducer\";\nimport thunk from \"redux-thunk\";\nimport \"./App.css\";\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Auth/Login\";\nimport Signup from \"./pages/Auth/Signup\";\nimport PostListing from \"./pages/PostListing\";\nimport Profile from \"./pages/Profile\";\nimport Listing from \"./pages/Listing\";\nimport { Provider } from \"react-redux\";\n\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { loginUser } from \"./redux/actions/userActions\";\nconst axios = require(\"axios\");\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nconst App = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    axios.post(\"/auth/user\").then(res => {\n      if (res.data.success) {\n        dispatch(loginUser(res.data.user));\n      }\n    });\n  }, []);\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/Login\" component={Login} />\n        <Route path=\"/Signup\" component={Signup} />\n        <Route path=\"/Profile\" component={Profile} />\n        <Route path=\"/PostListing\" component={PostListing} />\n        <Route path=\"/Listing/:id\" component={Listing} />\n        <Route path=\"/Listing\" component={Listing} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}